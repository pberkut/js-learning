{"mappings":"AA+wBA,IAAIA,EAAU,QAIZC,SAASC,eAAe,SAASC,UAAY,0BAA4CH,EAG3FC,SAASC,eAAe,SAASC,UAAY,0BAA4CH","sources":["src/js/script-module-6.js"],"sourcesContent":["// Start learning JavaScript module 6\n// console.log('start');\n\n//\n// const idx = true;\n// const x = !!idx;\n\n// console.log(x);\n\n// const objC = {};\n// const objB = Object.create(objC);\n\n// console.log(objB);\n\n// console.log('wqeq');\n\n// * Example\n// console.log(document);\n\n// const body = document.body;\n// console.log(body);\n\n// const list = body.firstElementChild;\n// console.log(list);\n\n// const firstListItem = list.firstElementChild;\n// console.log(firstListItem);\n\n// const listItems = list.children;\n// console.log(listItems);\n\n// * Example\n// const listWithId = document.querySelector('#menu');\n// listWithId.style.textTransform = 'uppercase';\n// listWithId.style.fontSize = '24px';\n// console.log(listWithId);\n\n// const listWithClass = document.querySelector('.menu');\n// console.log(listWithClass);\n\n// const menuItemsByTagName = document.querySelectorAll('li');\n// console.log(menuItemsByTagName);\n\n// const menuItemsByClass = document.querySelectorAll('.menu-item');\n// console.log(menuItemsByClass);\n\n// const firstMenuItem = document.querySelector('.menu-item');\n// firstMenuItem.style.color = 'tomato';\n// console.log(firstMenuItem);\n\n// * Example\n// function caseInSwitch(val) {\n//   let answer = '';\n//   // Змініть код лише під цим рядком\n//   switch (val) {\n//     case 1:\n//       answer = 'alpha';\n//       break;\n//   }\n\n//   // Змініть код лише над цим рядком\n//   return answer;\n// }\n\n// console.log(caseInSwitch(1));\n\n// Налаштування\n// function abTest(a, b) {\n//   // Змініть код лише під цим рядком\n//   if (a < 0 || b < 0) {\n//     return;\n//   }\n\n//   // Змініть код лише над цим рядком\n\n//   return Math.round(Math.pow(Math.sqrt(a) + Math.sqrt(b), 2));\n// }\n\n// console.log(abTest(0, 0));\n\n// * Example freecodecamp\n// let count = 0;\n\n// function cc(card) {\n//   // Змініть код лише під цим рядком\n//   switch (card) {\n//     case 2:\n//     case 3:\n//     case 4:\n//     case 5:\n//     case 6:\n//       count += 1;\n//       break;\n//     case 7:\n//     case 8:\n//     case 9:\n//       break;\n//     case 10:\n//     case 'J':\n//     case 'Q':\n//     case 'K':\n//     case 'A':\n//       count -= 1;\n//       break;\n//   }\n\n//   return `${count} ${count > 0 ? 'Bet' : 'Hold'}`;\n\n//   // Змініть код лише над цим рядком\n// }\n\n// cc(2);\n// cc(3);\n// cc(4);\n// cc(5);\n// cc(6);\n// console.log(cc());\n\n// cc(10);\n// cc('J');\n// cc('Q');\n// cc('K');\n// cc('A');\n\n// console.log(cc());\n\n// * Example\n// function checkObj(obj, checkProp) {\n//   // Змініть код лише під цим рядком\n\n//   return obj.hasOwnProperty(checkProp) ? obj[checkProp] : 'Not Found';\n//   // Змініть код лише над цим рядком\n// }\n\n// console.log(checkObj({ gift: 'pony', pet: 'kitten', bed: 'sleigh' }, 'gift'));\n// console.log(checkObj({ gift: 'pony', pet: 'kitten', bed: 'sleigh' }, 'house'));\n\n// * Exapmle\n// Налаштування\n// const recordCollection = {\n//   2548: {\n//     albumTitle: 'Slippery When Wet',\n//     artist: 'Bon Jovi',\n//     tracks: ['Let It Rock', 'You Give Love a Bad Name'],\n//   },\n//   2468: {\n//     albumTitle: '1999',\n//     artist: 'Prince',\n//     tracks: ['1999', 'Little Red Corvette'],\n//   },\n//   1245: {\n//     artist: 'Robert Palmer',\n//     tracks: [],\n//   },\n//   5439: {\n//     albumTitle: 'ABBA Gold',\n//   },\n// };\n\n// // Змініть код лише під цим рядком\n// function updateRecords(records, id, prop, value) {\n//   if (prop === 'tracks') {\n//   } else {\n//   }\n//   return records;\n// }\n\n// console.log(updateRecords(recordCollection, 5439, 'artist', 'ABBA'));\n\n// import users from './data/objects.js';\n\n// console.log(users);\n\n// * Example\n// const singleBtn = document.querySelector('#single');\n\n// const handleClick = () => {\n//   console.log('click event listener callback');\n// };\n\n// singleBtn.addEventListener('click', handleClick);\n\n// // ===============================================\n// const multiBtn = document.querySelector('#multiple');\n\n// const firstCallback = () => {\n//   console.log('First callback!');\n// };\n// const secondCallback = () => {\n//   console.log('Second callback!');\n// };\n// const thirdCallback = () => {\n//   console.log('Third callback!');\n// };\n\n// multiBtn.addEventListener('click', firstCallback);\n// multiBtn.addEventListener('click', secondCallback);\n// multiBtn.addEventListener('click', thirdCallback);\n\n// const addListenerBtn = document.querySelector('[data-action=\"add\"]');\n// const removeListenerBtn = document.querySelector('[data-action=\"remove\"]');\n// const btn = document.querySelector('#btn');\n\n// // const handleClick = () => {\n// //   console.log('click event listener callback');\n// // };\n\n// addListenerBtn.addEventListener('click', () => {\n//   btn.addEventListener('click', handleClick);\n//   console.log('click event listener was added to btn');\n// });\n\n// removeListenerBtn.addEventListener('click', () => {\n//   btn.removeEventListener('click', handleClick);\n//   console.log('click event listener was removed from btn');\n// });\n\n// * Exapmle\n// const button = document.querySelector('.btn');\n\n// const handleClick = event => {\n//   console.log('event: ', event);\n//   console.log('event type: ', event.type);\n//   console.log('currentTarget: ', event.currentTarget);\n// };\n\n// button.addEventListener('click', handleClick);\n\n// document.addEventListener('keydown', event => {\n//   console.log('Keydown: ', event.key);\n// });\n\n// document.addEventListener('keyup', event => {\n//   console.log('Keyup: ', event.code);\n// });\n\n// document.addEventListener('keydown', event => {\n//   event.preventDefault();\n\n//   if ((event.ctrlKey || event.metaKey) && event.code === 'KeyS') {\n//     console.log('«Ctrl + s» or «Command + s» combo');\n//   }\n// });\n\n// * Example search and markup\n// import users from './data/objects.js';\n\n// const formRef = document.querySelector('.js-search');\n// const listRef = formRef.querySelector('.js-list');\n\n// const onSearch = evt => {\n//   evt.preventDefault();\n//   const { queryValue, selectValue } = evt.currentTarget.elements;\n//   // console.log(queryValue.value);\n//   // console.log(selectValue.value);\n//   console.log(queryValue.value);\n//   console.log(users[0][selectValue.value]);\n\n//   const searchResult = users.filter(user => user[selectValue.value].includes(queryValue.value));\n\n//   // console.log(searchResult);\n//   const markup = searchResult\n//     .map(\n//       ({ name, gender, eyeColor, balance }) =>\n//         `<li class=\"item-list-task-6\">\n//       <h2>${name}</h2>\n//       <p>Gender: ${gender}</p>\n//       <p>Eye color: ${eyeColor}</p>\n//       <p>Balance: ${balance}</p>\n//   </li>`,\n//     )\n//     .join('');\n//   console.log(markup);\n\n//   listRef.innerHTML = markup;\n// };\n\n// formRef.addEventListener('submit', onSearch);\n\n// * Example learning input\n\n// const inputRef = document.querySelector('.js-input');\n\n// inputRef.addEventListener('input', onInput);\n\n// function onInput(evt) {\n//   const query = evt.currentTarget.value;\n//   console.log(query);\n//   if (!query) {\n//     console.log('Empty string.');\n//   }\n// }\n\n// * Example event listener combination key\n\n// document.addEventListener('keydown', onPress);\n\n// function onPress(evt) {\n//   if (evt.ctrlKey && evt.code === 'KeyV') {\n//     evt.preventDefault();\n//     alert('You press \"ctrl + A\"');\n//   }\n\n//   console.log(evt);\n// }\n\n// * Example freecodecamp\n\n// const recordCollection = {\n//   2548: {\n//     albumTitle: 'Slippery When Wet',\n//     artist: 'Bon Jovi',\n//     tracks: ['Let It Rock', 'You Give Love a Bad Name'],\n//   },\n//   2468: {\n//     albumTitle: '1999',\n//     artist: 'Prince',\n//     tracks: ['1999', 'Little Red Corvette'],\n//   },\n//   1245: {\n//     artist: 'Robert Palmer',\n//     tracks: [],\n//   },\n//   5439: {\n//     albumTitle: 'ABBA Gold',\n//   },\n// };\n\n// // Змініть код лише під цим рядком\n// function updateRecords(records, id, prop, value) {\n//   if (prop !== 'tracks' && value !== '') {\n//     records[id][prop] = value;\n//   } else if (prop === 'tracks' && records[id].hasOwnProperty('tracks') === false) {\n//     records[id][prop] = [value];\n//   } else if (prop === 'tracks' && value !== '') {\n//     records[id][prop].push(value);\n//   } else if (value === '') {\n//     delete records[id][prop];\n//   }\n\n//   return records;\n// }\n\n// console.log(updateRecords(recordCollection, 5439, 'artist', 'ABBA'));\n\n// * Example\n// const myArray = [];\n\n// let i = 5;\n\n// while (i >= 0) {\n//   myArray.push(i);\n//   i -= 1;\n// }\n\n// console.log(myArray);\n\n// * Example\n// console.log('start');\n\n// const myArr = [2, 3, 4, 5, 6];\n// let total = 0;\n// for (let i = 0; i < myArr.length; i++) {\n//   total += myArr[i];\n//   console.log(total);\n// }\n\n// console.log(total);\n\n// * Example\n// function multiplyAll(arr) {\n//   let product = 1;\n//   // Змініть код лише під цим рядком\n//   for (let i = 0; i < arr.length; i++) {\n//     console.log(arr[i]);\n//     for (let j = 0; j < arr[i].length; j++) {\n//       product *= arr[i][j];\n//       console.log(arr[i][j]);\n//     }\n//   }\n//   // Змініть код лише над цим рядком\n//   return product;\n// }\n\n// const result = multiplyAll([\n//   [1, 2],\n//   [3, 4],\n//   [5, 6, 7],\n// ]);\n\n// console.log(result);\n\n// * Example\n// const arr = [\n//   [1, 2],\n//   [3, 4],\n//   [5, 6],\n// ];\n\n// for (let i = 0; i < arr.length; i++) {\n//   for (let j = 0; j < arr[i].length; j++) {\n//     console.log(arr[i][j]);\n//   }\n// }\n\n// * Example do while\n// const myArray = [];\n// let i = 10;\n\n// do {\n//   myArray.push(i);\n//   i++;\n// } while (i < 5);\n\n// console.log(myArray);\n\n// * Example Рекурсия пример\n// const arr = [1, 2, 3, 4, 5];\n// const n = 4;\n\n// function multiply(arr, n) {\n//   let product = 1;\n//   for (let i = 0; i < n; i++) {\n//     product *= arr[i];\n//   }\n//   return product;\n// }\n\n// console.log(multiply(arr, 5));\n\n// // Рекурсия\n// function multiply(arr, n) {\n//   if (n <= 0) {\n//     return 1;\n//   } else {\n//     return multiply(arr, n - 1) * arr[n - 1];\n//   }\n// }\n\n// function sum(arr, n) {\n//   // Only change code below this line\n//   if (n <= 0) {\n//     return 0;\n//   } else {\n//     console.log(n);\n//     return sum(arr, n - 1) + arr[n - 1];\n//   }\n//   // Only change code above this line\n// }\n\n// console.log(sum([1, 2, 3], 3));\n\n// * Example\n// Setup\n// const contacts = [\n//   {\n//     firstName: 'Akira',\n//     lastName: 'Laine',\n//     number: '0543236543',\n//     likes: ['Pizza', 'Coding', 'Brownie Points'],\n//   },\n//   {\n//     firstName: 'Harry',\n//     lastName: 'Potter',\n//     number: '0994372684',\n//     likes: ['Hogwarts', 'Magic', 'Hagrid'],\n//   },\n//   {\n//     firstName: 'Sherlock',\n//     lastName: 'Holmes',\n//     number: '0487345643',\n//     likes: ['Intriguing Cases', 'Violin'],\n//   },\n//   {\n//     firstName: 'Kristian',\n//     lastName: 'Vos',\n//     number: 'unknown',\n//     likes: ['JavaScript', 'Gaming', 'Foxes'],\n//   },\n// ];\n\n// function lookUpProfile(name, prop) {\n//   // Only change code below this line\n//   for (let i = 0; i < contacts.length; i += 1) {\n//     const isHasProp = contacts[i][prop];\n\n//     if (contacts[i].firstName === name) {\n//       if (contacts[i].hasOwnProperty(prop)) {\n//         return contacts[i][prop];\n//       }\n//       return 'No such property';\n//     }\n//   }\n//   return 'No such contact';\n//   // Only change code above this line\n// }\n\n// lookUpProfile('Akira', 'likes');\n// lookUpProfile('Kristian', 'lastName');\n// lookUpProfile('Sherlock', 'likes');\n// lookUpProfile('Harry', 'likes');\n// lookUpProfile('Bob', 'number');\n// lookUpProfile('Akira', 'address');\n\n// //\n// console.log(lookUpProfile('Akira', 'address'));\n// console.log(lookUpProfile('Kristian', 'lastName'));\n// console.log(lookUpProfile('Sherlock', 'likes'));\n// console.log(lookUpProfile('Harry', 'likes'));\n// console.log(lookUpProfile('Bob', 'number'));\n\n// * Example\n// console.log(Math.floor(Math.random() * 20));\n\n// console.time('start');\n// console.log('start');\n\n// let result = 0;\n\n// do {\n//   //   result = Math.floor(Math.random() * 20);\n//   //   result += 1;\n//   console.log(result);\n// } while (result < 15);\n\n// console.log('End');\n// console.timeEnd('start');\n\n// let n = 100;\n\n// function randomRange(min, max) {\n//   return Math.floor(Math.random() * (max - min + 1)) + min;\n// }\n\n// for (let i = 0; i < n; i += 1) {\n//   if (randomRange(1, n) === 10) {\n//     console.log(`${i} :`, randomRange(1, n));\n//     break;\n//   }\n// }\n\n// * Example\n// function convertToInteger(str) {\n//   return parseInt(str);\n// }\n\n// convertToInteger('56');\n\n// console.log(convertToInteger('056'));\n// console.log(convertToInteger('016'));\n// console.log(convertToInteger('000160'));\n// console.log(convertToInteger('000s160'));\n// console.log(convertToInteger('a000s160'));\n\n//  * Example Ternary\n// function checkSign(num) {\n//   return num === 0 ? 'zero' : num > 0 ? 'positive' : 'negative';\n// }\n\n// checkSign(10);\n\n// console.log(checkSign(-10));\n// console.log(checkSign(10));\n// console.log(checkSign(0));\n// console.log(checkSign(12));\n// console.log(checkSign(12));\n\n// * Example recursion\n// function countup(n) {\n//   if (n < 1) {\n//     return [];\n//   } else {\n//     const countArray = countup(n - 1);\n//     countArray.push(n);\n//     return countArray;\n//   }\n// }\n// console.log(countup(10));\n\n// Only change code below this line\n// function countdown(n) {\n//   if (n < 1) {\n//     return [];\n//   } else {\n//     const countArray = countdown(n - 1);\n//     countArray.unshift(n);\n\n//     return countArray;\n//   }\n// }\n// // Only change code above this line\n\n// console.log(countdown(10));\n\n// * Example\n// function rangeOfNumbers(startNum, endNum) {\n//   if (endNum < startNum) {\n//     return [];\n//   } else {\n//     const numbers = rangeOfNumbers(startNum, endNum - 1);\n//     numbers.push(endNum);\n//     return numbers;\n//   }\n// }\n\n// console.log(rangeOfNumbers(1, 5));\n// console.log(rangeOfNumbers(6, 9));\n// console.log(rangeOfNumbers(4, 4));\n\n//  * Example\n// var numArray = [];\n// for (var i = 0; i < 3; i++) {\n//   numArray.push(i);\n// }\n// console.log(numArray);\n// console.log(i);\n\n// * example\n// var printNumTwo;\n// for (var i = 0; i < 3; i++) {\n//   if (i === 2) {\n//     printNumTwo = function () {\n//       return i;\n//     };\n//   }\n// }\n// console.log(printNumTwo());\n\n// * Example\n// function checkScope() {\n//   let i = 'function scope';\n//   if (true) {\n//     let i = 'block scope';\n//     console.log('Block scope i is: ', i);\n//   }\n//   console.log('Function scope i is: ', i);\n//   return i;\n// }\n\n// console.log(checkScope());\n\n// * Example\n\n// let obj = {\n//   name: 'FreeCodeCamp',\n//   review: 'Awesome',\n// };\n// Object.freeze(obj);\n// obj.review = 'bad';\n// obj.newProp = 'Test';\n// console.log(obj);\n\n// * Example\n// function freezeObj() {\n//   const MATH_CONSTANTS = {\n//     PI: 3.14,\n//   };\n//   // Only change code below this line\n//   Object.freeze(MATH_CONSTANTS);\n//   // Only change code above this line\n//   try {\n//     MATH_CONSTANTS.PI = 99;\n//   } catch (ex) {\n//     console.log(ex);\n//   }\n//   return MATH_CONSTANTS.PI;\n// }\n// const PI = freezeObj();\n\n// console.log(freezeObj());\n\n// * Example\n\n// debugger;\n// const result = [] + 1 + 2; // concztznation\n\n// const a = true;\n// const b = true;\n\n// console.log(!!(a && b));\n// console.log(a && b);\n// debugger;\n\n// let name = 'пупкин'.replace('п', 'д');\n\n// f.call(null);\n\n// function f() {\n//   alert(this);\n// }\n\n// const a = (1, 5 - 1) * 2;\n// console.log(a);\n\n// * Exapmle\n\n// const spacing = '5px';\n// const styles = `padding: ${spacing}; background-color: darkblue; color: white; font-style:\n//          italic; border: ${spacing} solid crimson; font-size: 2em;`;\n// console.log('%cVariety is the spice of life', styles);\n\n// const result = 5 + 15;\n// console.warn(result);\n\n// * Example\n\n// program to implement queue data structure\n\n// class Queue {\n//   constructor() {\n//     this.items = [];\n//   }\n\n//   // add element to the queue\n//   enqueue(element) {\n//     return this.items.push(element);\n//   }\n\n//   // remove element from the queue\n//   dequeue() {\n//     if (this.items.length > 0) {\n//       return this.items.shift();\n//     }\n//   }\n\n//   // view the last element\n//   peek() {\n//     return this.items[this.items.length - 1];\n//   }\n\n//   // check if the queue is empty\n//   isEmpty() {\n//     return this.items.length == 0;\n//   }\n\n//   // the size of the queue\n//   size() {\n//     return this.items.length;\n//   }\n\n//   // empty the queue\n//   clear() {\n//     this.items = [];\n//   }\n// }\n\n// let queue = new Queue();\n// queue.enqueue(1);\n// queue.enqueue(2);\n// queue.enqueue(4);\n// queue.enqueue(8);\n// console.log(queue.items);\n\n// queue.dequeue();\n// console.log(queue.items);\n\n// console.log(queue.peek());\n\n// console.log(queue.isEmpty());\n\n// console.log(queue.size());\n\n// queue.clear();\n// console.log(queue.items);\n\n// * Example\n// var buffer = new ArrayBuffer(8);\n// var view = new Int32Array(buffer);\n\n// let a = 5;\n// let b = 'asdf';\n// let c = a + b;\n\n// // if you want to see the value of c\n// console.log(c);\n\n// // then do other operations\n// if (c) {\n//   // do something\n// }\n\n// * Example\n\nvar petName = 'Rocky'; //Global Variable\nmyFunction();\n\nfunction myFunction() {\n  document.getElementById('geeks').innerHTML = typeof petName + '- ' + 'My pet name is ' + petName;\n}\n\ndocument.getElementById('Geeks').innerHTML = typeof petName + '- ' + 'My pet name is ' + petName;\n"],"names":["$0fc833802d5d3111$var$petName","document","getElementById","innerHTML"],"version":3,"file":"6-module.761b0aad.js.map"}